@page "/"
@page "/raceboard"
@using Data

<h3>RaceBoard</h3>

@if (board.GameOver)
{
<div class="d-flex justify-content-center align-items-center">
    <div class="lead">
        The <span style="color: @board.GameWinner.Color; font-weight: bold">@board.GameWinner.Color</span> dinosaur wins the game!
    </div>
</div>
}

<div class="container">
    @foreach (var player in board.Players)
    {
        <div class="row">
            @for (int field = 1; field <= board.NumberOfFields; field++)
            {
            <div class="col-sm border">
                @if (field == player.Position)
                {
                    <img src=@player.IconPath width="80" />
                }
            </div>
            }
        </div>
    }
</div>

<div class="d-flex justify-content-center align-items-center">
    <button class="dice" @onclick="RollTheDice">
        <svg>
            <circle cx="45" cy="45" r="40" stroke="black" stroke-width="2" fill="@dices[0]" />
        </svg>
    </button>
    <button class="dice" @onclick="RollTheDice">
        <svg>
            <circle cx="45" cy="45" r="40" stroke="black" stroke-width="2" fill="@dices[1]" />
        </svg>
    </button>
</div>
      
<div class="d-flex justify-content-center align-items-center">
    <button class="reset-button" @onclick="board.ResetGame">
        Reset game
    </button>
</div>

@code {
    private GameBoard board = new GameBoard(numberOfPlayers: 6, numberOfFields: 10);
    private string[] dices = new string[] {"White", "White"};
    Random rng = new Random();

    private void RollTheDice()
    {
        for (int i = 0; i < dices.Length; i++)
        {
            if (board.GameOver)
                return;

            int roll = rng.Next(0, board.PlayerCount);
            var winningColor = board.MovePlayer(roll);
            dices[i] = winningColor;
        };
    }
}
